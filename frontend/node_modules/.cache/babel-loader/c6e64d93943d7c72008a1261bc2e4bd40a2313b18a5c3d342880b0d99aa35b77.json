{"ast":null,"code":"var _jsxFileName = \"D:\\\\cattle-disease-detection\\\\frontend\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", selectedFile);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const result = await response.json();\n      alert(`Response: ${JSON.stringify(result)}`);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"Failed to upload the file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cattle Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadPage, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","result","json","JSON","stringify","error","console","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","marginTop","_c","$RefreshReg$"],"sources":["D:/cattle-disease-detection/frontend/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadPage = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            alert(\"Please select a file first.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", selectedFile);\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/upload\", {\r\n                method: \"POST\",\r\n                body: formData,\r\n            });\r\n\r\n            const result = await response.json();\r\n            alert(`Response: ${JSON.stringify(result)}`);\r\n        } catch (error) {\r\n            console.error(\"Error uploading file:\", error);\r\n            alert(\"Failed to upload the file.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h1>Cattle Disease Detection</h1>\r\n            <input type=\"file\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload} style={{ marginTop: '10px' }}>Upload</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMO,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,YAAY,EAAE;MACfO,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACJ;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEV,YAAY,CAAC;IAEtC,IAAI;MACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACV,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCT,KAAK,CAAC,aAAaU,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,EAAE,CAAC;IAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CZ,KAAK,CAAC,4BAA4B,CAAC;IACvC;EACJ,CAAC;EAED,oBACIV,OAAA;IAAKwB,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC5B1B,OAAA;MAAA0B,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE3B;IAAiB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD9B,OAAA;MAAQiC,OAAO,EAAExB,YAAa;MAACe,KAAK,EAAE;QAAEU,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEd,CAAC;AAAC5B,EAAA,CArCID,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}